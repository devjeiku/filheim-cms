"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/constants/data.js":
/*!*******************************!*\
  !*** ./src/constants/data.js ***!
  \*******************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchProjects: () => (/* binding */ fetchProjects),\n/* harmony export */   getAsideImages: () => (/* binding */ getAsideImages),\n/* harmony export */   getBackgroundImages: () => (/* binding */ getBackgroundImages),\n/* harmony export */   getTeamImages: () => (/* binding */ getTeamImages),\n/* harmony export */   projects: () => (/* binding */ projects)\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\nconst STRAPI_URL = process.env.NEXT_PUBLIC_STRAPI_URL || 'http://localhost:1337';\nconst fetchProjects = async ()=>{\n    try {\n        const res = await fetch(\"\".concat(STRAPI_URL, \"/api/galleries?populate=image\"));\n        const data = await res.json();\n        return data.data.map((project)=>{\n            var _project_image;\n            return {\n                id: project.id,\n                name: project.name,\n                image: ((_project_image = project.image) === null || _project_image === void 0 ? void 0 : _project_image.url) ? \"\".concat(STRAPI_URL).concat(project.image.url) : '/cc.png'\n            };\n        });\n    } catch (error) {\n        console.error('Error fetching projects:', error);\n        return [];\n    }\n};\nasync function getBackgroundImages() {\n    try {\n        const res = await fetch(\"\".concat(STRAPI_URL, \"/api/background-images?populate=image\"));\n        const data = await res.json();\n        if (!res.ok) {\n            var _data_error;\n            throw new Error((data === null || data === void 0 ? void 0 : (_data_error = data.error) === null || _data_error === void 0 ? void 0 : _data_error.message) || 'Failed to fetch background images');\n        }\n        // Extract only image URLs\n        return data.data.map((item)=>{\n            var _item_image;\n            return {\n                image: ((_item_image = item.image) === null || _item_image === void 0 ? void 0 : _item_image.url) ? \"\".concat(STRAPI_URL).concat(item.image.url) : '/cc.png'\n            };\n        });\n    } catch (error) {\n        console.error('Error fetching background images:', error.message);\n        return [];\n    }\n}\nasync function getAsideImages() {\n    try {\n        const res = await fetch(\"\".concat(STRAPI_URL, \"/api/asides?populate=image\"));\n        const data = await res.json();\n        if (!res.ok) {\n            var _data_error;\n            throw new Error((data === null || data === void 0 ? void 0 : (_data_error = data.error) === null || _data_error === void 0 ? void 0 : _data_error.message) || 'Failed to fetch background images');\n        }\n        // Extract only image URLs\n        return data.data.map((item)=>{\n            var _item_image;\n            return {\n                image: ((_item_image = item.image) === null || _item_image === void 0 ? void 0 : _item_image.url) ? \"\".concat(STRAPI_URL).concat(item.image.url) : '/cc.png'\n            };\n        });\n    } catch (error) {\n        console.error('Error fetching background images:', error.message);\n        return [];\n    }\n}\n//copy the getAsideImages but use ceos\nasync function getTeamImages() {\n    try {\n        const res = await fetch(\"\".concat(STRAPI_URL, \"/api/teams?populate=image\"));\n        const data = await res.json();\n        if (!res.ok) {\n            var _data_error;\n            throw new Error((data === null || data === void 0 ? void 0 : (_data_error = data.error) === null || _data_error === void 0 ? void 0 : _data_error.message) || 'Failed to fetch team images');\n        }\n        // Extract only image URLs\n        return data.data.map((item)=>{\n            var _item_image;\n            return {\n                name: item.name,\n                position: item.position,\n                image: ((_item_image = item.image) === null || _item_image === void 0 ? void 0 : _item_image.url) ? \"\".concat(STRAPI_URL).concat(item.image.url) : '/cc.png'\n            };\n        });\n    } catch (error) {\n        console.error('Error fetching team images:', error.message);\n        return [];\n    }\n}\nconst projects = [\n    {\n        id: 1,\n        category: 'Minimalist',\n        title: 'Minimalist',\n        image: '/cc.png'\n    },\n    {\n        id: 2,\n        category: 'Black and White',\n        title: 'Black and White',\n        image: '/cc-2.jpg'\n    },\n    {\n        id: 3,\n        category: 'Concord',\n        title: 'Concord',\n        image: '/cc-3.jpg'\n    },\n    {\n        id: 4,\n        category: 'Modern',\n        title: 'Modern',\n        image: '/cc-4.jpg'\n    },\n    {\n        id: 5,\n        category: 'Luxury',\n        title: 'Luxury',\n        image: '/cc.png'\n    },\n    {\n        id: 6,\n        category: 'Classic',\n        title: 'Classic',\n        image: '/cc-2.jpg'\n    },\n    {\n        id: 7,\n        category: 'Concord',\n        title: 'Concord',\n        image: '/cc-3.jpg'\n    },\n    {\n        id: 8,\n        category: 'Minimalist',\n        title: 'Minimalist',\n        image: '/cc-4.jpg'\n    },\n    {\n        id: 9,\n        category: 'Commercial',\n        title: 'Commercial',\n        image: '/cc.png'\n    },\n    {\n        id: 10,\n        category: 'Industrial',\n        title: 'Industrial',\n        image: '/cc-2.jpg'\n    }\n];\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = __webpack_module__.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                __webpack_module__.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                __webpack_module__.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        __webpack_module__.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    __webpack_module__.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/constants/data.js\n"));

/***/ })

});